/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Kardex.java
 *
 * Created on 26-jul-2013, 15:47:53
 */

package kardexarchivo;
//import javax.swing.JFrame;
//import  javax.swing.JTable;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
//import java.awt.*;
//import java.awt.event.*;
import java.sql.ResultSetMetaData;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFormattedTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;
/**
 *
 * @author edwin.cevallost
 */
public class ActualizarKardex extends javax.swing.JDialog {
private boolean existejuicio;
private Usuario user;
    /** Creates new form Kardex */
    public ActualizarKardex(java.awt.Frame parent, boolean modal, Usuario u) {
        super(parent, modal);
        initComponents();

        setMaximumSize(new Dimension(800,600));
        setMinimumSize(new Dimension(800,600));
        setLocationRelativeTo(parent);
        user=u;
        //this.txtJudicatura.setText(user.jud_id);
        //DefaultComboBoxModel cmbJueces = new DefaultComboBoxModel(CargarJueces(user.jud_id));
        //this.cmbJuez.setModel(cmbJueces);
        //DefaultComboBoxModel cmbResponsables = new DefaultComboBoxModel(CargarResponsableJuicio(user.jud_id));
        //this.cmbResponsable.setModel(cmbResponsables);
        //DefaultComboBoxModel cmbSecretarios = new DefaultComboBoxModel(CargarSecretarios(user.jud_id));
        //this.cmbSecretario.setModel(cmbSecretarios);
        DefaultComboBoxModel mdlMaterias = new DefaultComboBoxModel(CargarMaterias());
        this.cmbMaterias.setModel(mdlMaterias);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        txtJudicatura = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tkardex = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtDemandado = new javax.swing.JTextField();
        txtActor = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        cmbSecretario = new javax.swing.JComboBox();
        cmbJuez = new javax.swing.JComboBox();
        txtCuerpos = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        lblNaturaleza = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lblDemandado3 = new javax.swing.JLabel();
        txtNaturaleza = new javax.swing.JTextField();
        cmbResponsable = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        lblLogJuez = new javax.swing.JLabel();
        lblDemandado4 = new javax.swing.JLabel();
        txtFojas = new javax.swing.JTextField();
        txtUbicacion = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtObservaciones = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        cmbTipoJuicio = new javax.swing.JComboBox();
        cmbDelitos = new javax.swing.JComboBox();
        cmbMaterias = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        txtNumero = new javax.swing.JTextField();
        txtAno = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        setName("Form"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(kardexarchivo.KardexArchivoApp.class).getContext().getResourceMap(ActualizarKardex.class);
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        txtJudicatura.setEnabled(false);
        txtJudicatura.setName("txtJudicatura"); // NOI18N
        txtJudicatura.setNextFocusableComponent(txtAno);
        txtJudicatura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtJudicaturaFocusLost(evt);
            }
        });
        txtJudicatura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtJudicaturaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtJudicaturaKeyTyped(evt);
            }
        });

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        btnBuscar.setText(resourceMap.getString("btnBuscar.text")); // NOI18N
        btnBuscar.setName("btnBuscar"); // NOI18N
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
        });
        btnBuscar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                btnBuscarMouseDragged(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tkardex.setFont(resourceMap.getFont("tkardex.font")); // NOI18N
        tkardex.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tkardex.setName("tkardex"); // NOI18N
        jScrollPane1.setViewportView(tkardex);

        btnGuardar.setText(resourceMap.getString("btnGuardar.text")); // NOI18N
        btnGuardar.setEnabled(false);
        btnGuardar.setName("btnGuardar"); // NOI18N
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
        });
        btnGuardar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnGuardarKeyPressed(evt);
            }
        });

        jPanel1.setName("jPanel1"); // NOI18N

        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        txtDemandado.setName("txtDemandado"); // NOI18N

        txtActor.setName("txtActor"); // NOI18N

        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        cmbSecretario.setName("cmbSecretario"); // NOI18N

        cmbJuez.setName("cmbJuez"); // NOI18N

        txtCuerpos.setName("txtCuerpos"); // NOI18N
        txtCuerpos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCuerposKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCuerposKeyTyped(evt);
            }
        });

        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N

        lblNaturaleza.setText(resourceMap.getString("lblNaturaleza.text")); // NOI18N
        lblNaturaleza.setName("lblNaturaleza"); // NOI18N

        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N

        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N

        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N

        lblDemandado3.setText(resourceMap.getString("lblDemandado3.text")); // NOI18N
        lblDemandado3.setName("lblDemandado3"); // NOI18N

        txtNaturaleza.setName("txtNaturaleza"); // NOI18N

        cmbResponsable.setName("cmbResponsable"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        lblLogJuez.setFont(resourceMap.getFont("lblLogJuez.font")); // NOI18N
        lblLogJuez.setText(resourceMap.getString("lblLogJuez.text")); // NOI18N
        lblLogJuez.setToolTipText(resourceMap.getString("lblLogJuez.toolTipText")); // NOI18N
        lblLogJuez.setName("lblLogJuez"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(lblLogJuez)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLogJuez)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        lblDemandado4.setText(resourceMap.getString("lblDemandado4.text")); // NOI18N
        lblDemandado4.setName("lblDemandado4"); // NOI18N

        txtFojas.setName("txtFojas"); // NOI18N

        txtUbicacion.setName("txtUbicacion"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        txtObservaciones.setColumns(20);
        txtObservaciones.setRows(5);
        txtObservaciones.setName("txtObservaciones"); // NOI18N
        jScrollPane2.setViewportView(txtObservaciones);

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        cmbTipoJuicio.setName("cmbTipoJuicio"); // NOI18N
        cmbTipoJuicio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoJuicioItemStateChanged(evt);
            }
        });

        cmbDelitos.setName("cmbDelitos"); // NOI18N

        cmbMaterias.setName("cmbMaterias"); // NOI18N
        cmbMaterias.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMateriasItemStateChanged(evt);
            }
        });

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel16)
                            .addGap(6, 6, 6)
                            .addComponent(cmbSecretario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cmbJuez, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbResponsable, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtDemandado, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtActor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbTipoJuicio, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbDelitos, 0, 391, Short.MAX_VALUE))))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDemandado4)
                            .addComponent(txtCuerpos, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFojas, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDemandado3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblNaturaleza)
                    .addComponent(txtNaturaleza, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbTipoJuicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cmbDelitos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtActor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDemandado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(cmbJuez))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbSecretario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(cmbResponsable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDemandado4)
                            .addComponent(lblDemandado3)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCuerpos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFojas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUbicacion))
                        .addGap(12, 12, 12)
                        .addComponent(lblNaturaleza)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNaturaleza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );

        btnLimpiar.setText(resourceMap.getString("btnLimpiar.text")); // NOI18N
        btnLimpiar.setName("btnLimpiar"); // NOI18N
        btnLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseClicked(evt);
            }
        });
        btnLimpiar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnLimpiarKeyPressed(evt);
            }
        });

        jButton1.setText(resourceMap.getString("btnAgregar.text")); // NOI18N
        jButton1.setName("btnAgregar"); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        btnSalir.setText(resourceMap.getString("btnSalir.text")); // NOI18N
        btnSalir.setName("btnSalir"); // NOI18N
        btnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalirMouseClicked(evt);
            }
        });
        btnSalir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalirKeyPressed(evt);
            }
        });

        txtNumero.setName("txtNumero"); // NOI18N
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
        });

        txtAno.setName("txtAno"); // NOI18N
        txtAno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAnoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAnoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtJudicatura, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAno, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLimpiar)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8))
                .addContainerGap(494, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 902, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 745, Short.MAX_VALUE)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, 0, 902, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtJudicatura, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAno, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBuscar)
                        .addComponent(btnLimpiar)
                        .addComponent(btnGuardar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalir)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
        // TODO add your handling code here:
 if(this.btnBuscar.isEnabled()){
        btnGuardar.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent e) {
                btnGuardar.removeActionListener(this);
                 btnGuardar.setEnabled(true);
            }
        });
        String idjuicio;
        idjuicio=this.txtJudicatura.getText()+this.txtAno.getText()+this.txtNumero.getText();
        existejuicio=this.CargarJuicio(idjuicio);
        if(existejuicio){
            this.txtJudicatura.setEditable(false);
            this.txtJudicatura.setEnabled(false);
            this.txtAno.setEditable(false);
            this.txtAno.setEnabled(false);
            this.txtNumero.setEditable(false);
            this.txtNumero.setEnabled(false);
            this.btnGuardar.setEnabled(true);

        }
        }
    }//GEN-LAST:event_btnBuscarMouseClicked

    private void txtJudicaturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJudicaturaKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            this.txtAno.requestFocus();
        }
    }//GEN-LAST:event_txtJudicaturaKeyPressed

    private void txtJudicaturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJudicaturaKeyTyped
        // TODO add your handling code here:
        if (txtJudicatura.getText().length()== 5)
              evt.consume();
    }//GEN-LAST:event_txtJudicaturaKeyTyped

    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked
        // TODO add your handling code here:
        String idjuicio;
        idjuicio=this.txtJudicatura.getText()+this.txtAno.getText()+this.txtNumero.getText();
        Juicio juicio= new Juicio();
        juicio.jui_id=idjuicio;
        juicio.jud_id=this.txtJudicatura.getText();
        juicio.jui_actor=this.txtActor.getText();
        juicio.jui_demandado=this.txtDemandado.getText();
        juicio.jui_cuerpos=Integer.parseInt(this.txtCuerpos.getText());
        juicio.jui_naturaleza=this.txtNaturaleza.getText();
        juicio.jui_ubicacion=this.txtUbicacion.getText();
        juicio.jui_fojas=Integer.parseInt(this.txtFojas.getText());
        juicio.usu_id=user.usu_id;
        Juez jue = new Juez();
        Secretario sec = new Secretario();
        ResponsablesJuicio resp= new ResponsablesJuicio();
        Materias mat = new Materias();
        TipoJuicio tip= new TipoJuicio();
        Delitos del = new Delitos();
        resp=(ResponsablesJuicio)this.cmbResponsable.getSelectedItem();
        sec=(Secretario)this.cmbSecretario.getSelectedItem();
        jue=(Juez)this.cmbJuez.getSelectedItem();
        mat=(Materias)this.cmbMaterias.getSelectedItem();
        tip=(TipoJuicio)this.cmbTipoJuicio.getSelectedItem();
        del=(Delitos)this.cmbDelitos.getSelectedItem();
        //juicio.jui_juez=jue.get
        //juicio.jui_secretario=sec.getSec_id();
        juicio.resp_id=resp.getResp_id();
        juicio.jui_observaciones=txtObservaciones.getText();
        juicio.mat_id=mat.getMat_id();
        juicio.tip_id=tip.getTip_id();
        juicio.del_id=del.getDel_id();
        if (juicio.ExisteJuicio()){
            if(juicio.GuardarJuicio()){
             String st="El juicio "+juicio.jui_id+" se actualizo correctamente....";
                   existejuicio=this.CargarJuicio(idjuicio);
                    //this.txtJudicatura.setEditable(false);
                    //this.txtJudicatura.setEnabled(false);
                    this.txtAno.setEditable(false);
                    this.txtAno.setEnabled(false);
                    this.txtNumero.setEditable(false);
                    this.txtNumero.setEnabled(false);
                    this.btnGuardar.setEnabled(false);
                    this.btnLimpiar.setEnabled(true);
                    JOptionPane.showMessageDialog(null,st);

            }
        } else {
            String st="Debe ingresar un juicio para poder actualziar....";
             //existejuicio=this.CargarJuicio(idjuicio);
              JOptionPane.showMessageDialog(null,st);
            }
    }//GEN-LAST:event_btnGuardarMouseClicked

    private void btnGuardarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnGuardarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGuardarKeyPressed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        if (existejuicio){
            String idjuicio;
            idjuicio=this.txtJudicatura.getText()+this.txtAno.getText()+this.txtNumero.getText();
           // this.tkardex.getModel().getColumnClass(0).getField(idjuicio);
            int kar_id=Integer.parseInt(tkardex.getValueAt(tkardex.getSelectedRow(),0).toString());

            new ActualizarGuardarKardex(new javax.swing.JFrame(),true, idjuicio,user,kar_id).setVisible(true);
            this.CargarKardexJuicio(idjuicio);
        }else
        {
         String st="Debe ingresar un juicio para poder modificar...";
                   JOptionPane.showMessageDialog(null,st);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void btnLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseClicked
        // TODO add your handling code here:
        if(this.btnLimpiar.isEnabled())
            this.Limpiar();
    }//GEN-LAST:event_btnLimpiarMouseClicked

    private void btnLimpiarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnLimpiarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLimpiarKeyPressed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        this.Limpiar();
        
    }//GEN-LAST:event_formWindowClosed

    private void btnSalirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalirKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnSalirKeyPressed

    private void btnSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnSalirMouseClicked

    private void txtJudicaturaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtJudicaturaFocusLost
        // TODO add your handling code here:
        if (!this.txtJudicatura.getText().isEmpty()){
        Judicatura jud = new Judicatura();
        jud.jud_id=this.txtJudicatura.getText();
            if(!jud.BuscarJudicatura()){

                this.txtJudicatura.requestFocus();
                this.txtJudicatura.selectAll();
                 String st="La judicatura ingresada no existe...";
                       JOptionPane.showMessageDialog(null,st);
            }
        }
    }//GEN-LAST:event_txtJudicaturaFocusLost

    private void btnBuscarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarMouseDragged

    private void txtCuerposKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCuerposKeyTyped
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtCuerposKeyTyped

    private void txtCuerposKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCuerposKeyPressed
        // TODO add your handling code here:
        char teclaPulsada = evt.getKeyChar(); // Recogemos, a partir del evento, la tecla que se pulsó
        if (!Character.isDigit(teclaPulsada)) { // Si la tecla pulsada no es un dígito, entonces...
            evt.consume(); // Borramos la última letra introducida (lo hace muy rápido, la
                            // letra nunca se escribe en el textfield)
        }
    }//GEN-LAST:event_txtCuerposKeyPressed

    private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped
        // TODO add your handling code here:
        if (txtNumero.getText().length()== 5 && Character.isDigit(evt.getKeyChar()))
            evt.consume();
    }//GEN-LAST:event_txtNumeroKeyTyped

    private void txtAnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnoKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            txtNumero.requestFocus();
        }        // TODO add your handling code here:
}//GEN-LAST:event_txtAnoKeyPressed

    private void txtAnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnoKeyTyped
        // TODO add your handling code here:
        if (txtAno.getText().length()== 4 || !Character.isDigit(evt.getKeyChar()))
            evt.consume();
}//GEN-LAST:event_txtAnoKeyTyped

    private void cmbTipoJuicioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoJuicioItemStateChanged
        // TODO add your handling code here:
       if (evt.getStateChange() == evt.SELECTED) {
                TipoJuicio tipjuicio= new TipoJuicio();
                tipjuicio=(TipoJuicio)this.cmbTipoJuicio.getSelectedItem();
                Materias mat= new Materias();
                mat=(Materias)this.cmbMaterias.getSelectedItem();
                DefaultComboBoxModel cmbDelito = new DefaultComboBoxModel(CargarDelitos(mat.getMat_id(),tipjuicio.getTip_id()));
                this.cmbDelitos.setModel(cmbDelito);

          }
    }//GEN-LAST:event_cmbTipoJuicioItemStateChanged

    private void cmbMateriasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMateriasItemStateChanged
         if (evt.getStateChange() == evt.SELECTED) {
            Materias mat= new Materias();
            mat=(Materias)this.cmbMaterias.getSelectedItem();
            DefaultComboBoxModel mdlTipoJuicios = new DefaultComboBoxModel(CargarTiposJuicio(mat.getMat_id()));
            this.cmbTipoJuicio.setModel(mdlTipoJuicios);
            DefaultComboBoxModel cmbDelitoTemp = new DefaultComboBoxModel();
            this.cmbDelitos.setModel(cmbDelitoTemp);
        }
    }//GEN-LAST:event_cmbMateriasItemStateChanged

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ActualizarKardex dialog = new ActualizarKardex(new javax.swing.JFrame(), true, new Usuario());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


 
public boolean CargarJuicio(String idjuicio) {

            ResultSet rs = null;
            BaseDatos conn = new BaseDatos("INVENTARIO");
            conn.Conectar();
            conn.CrearStoreProcedure("exec proc_select_juicio_completo ?");
            conn.AgregarParametroString("jui_id", idjuicio);
            rs=conn.EjecutarComando();

           try{
              if(rs.next()){
               this.txtActor.setText(rs.getString("actor"));
               this.txtDemandado.setText(rs.getString("demandado"));


               //cargar juez a combo
               Juez j = new Juez(rs.getInt("jue_id"),rs.getString("jue_nombres"),rs.getString("jue_apellidos"),rs.getString("jue_inicial"));
               ResponsablesJuicio resp= new ResponsablesJuicio(rs.getInt("resp_id"),rs.getString("resp_nombres"),rs.getString("resp_apellidos"));
               Secretario sec= new Secretario(rs.getInt("sec_id"),rs.getString("sec_nombres"),rs.getString("sec_apellidos"));
               TipoJuicio tipojuicio= new TipoJuicio(rs.getInt("tip_id"),rs.getString("tip_nombre"));
               Delitos delito= new Delitos(rs.getInt("del_id"),rs.getString("del_nombre"));
               Materias materias= new Materias(rs.getInt("mat_id"),rs.getString("mat_nombre"));

               DefaultComboBoxModel mdlTipoJuicios = new DefaultComboBoxModel(CargarTiposJuicio(materias.getMat_id()));
               System.out.println(materias.getMat_id());
               this.cmbTipoJuicio.setModel(mdlTipoJuicios);
               DefaultComboBoxModel mdlDelitos = new DefaultComboBoxModel(CargarDelitos(materias.getMat_id(),tipojuicio.getTip_id()));
               System.out.println(tipojuicio.getTip_id());
                this.cmbDelitos.setModel(mdlDelitos);

               cmbJuez.setEditable(true);
               cmbJuez.setSelectedItem(j);
               cmbJuez.setEditable(false);

               Font f = new Font("TimesRoman", Font.PLAIN, 38);
               lblLogJuez.setFont(f);
               lblLogJuez.setText(j.getJue_inicial());

               cmbSecretario.setEditable(true);
               cmbSecretario.setSelectedItem(sec);
               cmbSecretario.setEditable(false);

               cmbResponsable.setEditable(true);
               cmbResponsable.setSelectedItem(resp);
               cmbResponsable.setEditable(false);

               cmbMaterias.setEditable(true);
               cmbMaterias.setSelectedItem(materias);
               cmbMaterias.setEditable(false);

               cmbTipoJuicio.setEditable(true);
               cmbTipoJuicio.setSelectedItem(tipojuicio);
               cmbTipoJuicio.setEditable(false);

               cmbDelitos.setEditable(true);
               cmbDelitos.setSelectedItem(delito);
               cmbDelitos.setEditable(false);

               this.txtCuerpos.setText(rs.getString("cuerpos"));
               this.txtNaturaleza.setText(rs.getString("naturaleza"));
               this.txtUbicacion.setText(rs.getString("ubicacion"));
               this.txtFojas.setText(rs.getString("fojas"));
               this.txtObservaciones.setText(rs.getString("observaciones"));
               CargarKardexJuicio(idjuicio);
               rs.close();
               return true;

            }else{
                    String st="El proceso ingresado no existe...";
                   JOptionPane.showMessageDialog(null,st);
                   this.Limpiar();
                   rs.close();
                   return false;
           }

            }catch(SQLException ex) {
                    System.out.println("Hubo un problema al ejecutar comando...Error:"+ex);
           }
            return false;
        }
public void CargarKardexJuicio(String idjuicio) {
            ResultSet rs = null;
            BaseDatos conn = new BaseDatos("INVENTARIO");
            conn.Conectar();
            conn.CrearStoreProcedure("exec proc_select_kardex_juicio ?");
            conn.AgregarParametroString("jui_id", idjuicio);
            rs=conn.EjecutarComando();

           try{

               ResultSetMetaData rsmd = rs.getMetaData();
               int numcol= rsmd.getColumnCount();
               DefaultTableModel modelo = new DefaultTableModel();
               this.tkardex.setModel(modelo);
               for(int x=1;x<=numcol;x++){
                    modelo.addColumn(rsmd.getColumnLabel(x));
            }

            while(rs.next()){
                Object [] fila= new Object[numcol];
                for(int y=0;y<numcol;y++){
                    fila[y]=rs.getObject(y+1);
               }
                modelo.addRow(fila);
             
            }
                tkardex.getColumnModel().getColumn(0).setMinWidth(0);
                tkardex.getColumnModel().getColumn(0).setMinWidth(0);
                tkardex.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
                tkardex.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
                //tkardex.setEnabled(false);
               rs.close();

            }catch(SQLException ex) {
                    System.out.println("Hubo un problema al ejecutar comando...Error:"+ex);
           }
            conn.Desconectar();
}

 public static Vector<Juez> CargarJueces(String jud_id){
        Vector<Juez> jueces = new Vector<Juez>();
        Juez juez= null;
        ResultSet rs = null;
        BaseDatos bdd= new BaseDatos("INVENTARIO");
        bdd.Conectar();
        bdd.CrearStoreProcedure("exec proc_select_jueces ?");
        bdd.AgregarParametroString("jud_id", jud_id);
        rs=bdd.EjecutarComando();
        try{
            while(rs.next()){
                juez= new Juez();
                juez.setJue_id(rs.getInt("jue_id"));
                juez.setJue_nombres(rs.getString("jue_nombres"));
                juez.setJue_apellidos(rs.getString("jue_apellidos"));
                jueces.add(juez);
            }
            rs.close();
        }catch(SQLException ex){
          System.out.println(ex);
        }
        bdd.Desconectar();
        return jueces;

    }
 public static Vector<Secretario> CargarSecretarios(String jud_id){
        Vector<Secretario> secretarios = new Vector<Secretario>();
        Secretario secretario= null;
        ResultSet rs = null;
        BaseDatos bdd= new BaseDatos("INVENTARIO");
        bdd.Conectar();
        bdd.CrearStoreProcedure("exec proc_select_secretarios ?");
        bdd.AgregarParametroString("jud_id", jud_id);
        rs=bdd.EjecutarComando();
        try{
            while(rs.next()){
                secretario= new Secretario();
                secretario.setSec_id(rs.getInt("sec_id"));
                secretario.setSec_nombres(rs.getString("sec_nombres"));
                secretario.setSec_apellidos(rs.getString("sec_apellidos"));
                secretarios.add(secretario);
            }
            rs.close();
        }catch(SQLException ex){
          System.out.println(ex);
        }
        bdd.Desconectar();
        return secretarios;

    }
 public static Vector<ResponsablesJuicio> CargarResponsableJuicio(String jud_id){
        Vector<ResponsablesJuicio> responsables = new Vector<ResponsablesJuicio>();
        ResponsablesJuicio resp= null;
        ResultSet rs = null;
        BaseDatos bdd= new BaseDatos("INVENTARIO");
        bdd.Conectar();
        bdd.CrearStoreProcedure("exec proc_select_responsables_juicios ?");
        bdd.AgregarParametroString("jud_id", jud_id);
        rs=bdd.EjecutarComando();
        try{
            while(rs.next()){
                resp= new ResponsablesJuicio();
                resp.setResp_id(rs.getInt("resp_id"));
                resp.setResp_nombres(rs.getString("resp_nombres"));
                resp.setResp_apellidos(rs.getString("resp_apellidos"));
                responsables.add(resp);
            }
            rs.close();
        }catch(SQLException ex){
          System.out.println(ex);
        }
        bdd.Desconectar();
        return responsables;

    }

 public static Vector<Materias> CargarMaterias(){
        Vector<Materias> materias = new Vector<Materias>();
        Materias mat= null;
        ResultSet rs = null;
        BaseDatos bdd= new BaseDatos("INVENTARIO");
        bdd.Conectar();
        bdd.CrearStoreProcedure("exec proc_select_materias");
        rs=bdd.EjecutarComando();
        try{
            while(rs.next()){
                mat= new Materias();
                mat.setMat_id(rs.getInt("mat_id"));
                mat.setMat_nombre(rs.getString("mat_nombre"));
                materias.add(mat);
            }
            rs.close();
        }catch(SQLException ex){
          System.out.println(ex);
        }
        return materias;

    }
  public static Vector<TipoJuicio> CargarTiposJuicio(int mat){
        Vector<TipoJuicio> tipjui = new Vector<TipoJuicio>();
        TipoJuicio tj= null;
        ResultSet rs = null;
        BaseDatos bdd= new BaseDatos("INVENTARIO");
        bdd.Conectar();
        bdd.CrearStoreProcedure("exec proc_select_tipojuicio_x_materia ?");
        bdd.AgregarParametroEntero("mat_id", mat);
        rs=bdd.EjecutarComando();
        try{
               
            while(rs.next()){
                tj= new TipoJuicio();
                tj.setTip_id(rs.getInt("tip_id"));
                tj.setTip_nombre(rs.getString("tip_nombre"));
                tipjui.add(tj);
            }
            rs.close();
        }catch(SQLException ex){
          System.out.println(ex);
        }
        return tipjui;

    }
public static Vector<Delitos> CargarDelitos(int materia,int tipojuicio){
        Vector<Delitos> delitos = new Vector<Delitos>();
        Delitos del= null;
        ResultSet rs = null;
        BaseDatos bdd= new BaseDatos("INVENTARIO");
        bdd.Conectar();
        bdd.CrearStoreProcedure("exec proc_select_delitos_x_tipodejucio_materias ?,?");
        bdd.AgregarParametroEntero("mat_id", materia);
         bdd.AgregarParametroEntero("tip_id", tipojuicio);
        rs=bdd.EjecutarComando();
        try{
               
            while(rs.next()){
                del= new Delitos();
                del.setDel_id(rs.getInt("del_id"));
                del.setDel_nombre(rs.getString("del_nombre"));
                delitos.add(del);
            }
            rs.close();
        }catch(SQLException ex){
          System.out.println(ex);
        }
        return delitos;

    }
      public void Limpiar() {
             this.txtActor.setText("");
             this.txtDemandado.setText("");
             this.cmbJuez.setSelectedIndex(0);
             this.cmbResponsable.setSelectedIndex(0);
             this.cmbSecretario.setSelectedItem(0);
             //this.txtJudicatura.setText(null);
             this.txtAno.setText(null);
             this.txtNumero.setText(null);
             this.txtUbicacion.setText(null);
             this.txtFojas.setText(null);
             this.txtNaturaleza.setText("");
             this.txtCuerpos.setText(null);
             this.lblLogJuez.setText("");
             this.tkardex.setModel(new DefaultTableModel());
           // this.txtJudicatura.setEditable(true);
            //this.txtJudicatura.setEnabled(true);
            this.txtAno.setEditable(true);
            this.txtAno.setEnabled(true);
            this.txtNumero.setEditable(true);
            this.txtNumero.setEnabled(true);
        this.existejuicio=false;
        this.btnGuardar.setEnabled(false);
      }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JComboBox cmbDelitos;
    private javax.swing.JComboBox cmbJuez;
    private javax.swing.JComboBox cmbMaterias;
    private javax.swing.JComboBox cmbResponsable;
    private javax.swing.JComboBox cmbSecretario;
    private javax.swing.JComboBox cmbTipoJuicio;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDemandado3;
    private javax.swing.JLabel lblDemandado4;
    private javax.swing.JLabel lblLogJuez;
    private javax.swing.JLabel lblNaturaleza;
    private javax.swing.JTable tkardex;
    private javax.swing.JTextField txtActor;
    private javax.swing.JTextField txtAno;
    private javax.swing.JTextField txtCuerpos;
    private javax.swing.JTextField txtDemandado;
    private javax.swing.JTextField txtFojas;
    private javax.swing.JTextField txtJudicatura;
    private javax.swing.JTextField txtNaturaleza;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextArea txtObservaciones;
    private javax.swing.JTextField txtUbicacion;
    // End of variables declaration//GEN-END:variables


}
