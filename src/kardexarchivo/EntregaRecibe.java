/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Kardex.java
 *
 * Created on 26-jul-2013, 15:47:53
 */

package kardexarchivo;
//import javax.swing.JFrame;
//import  javax.swing.JTable;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
//import java.awt.*;
//import java.awt.event.*;
import java.sql.ResultSetMetaData;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JList;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author edwin.cevallost
 */
public class EntregaRecibe extends javax.swing.JDialog {
    
private boolean existejuicio;
private Usuario user;
private DefaultListModel mdlActores = new DefaultListModel();
private DefaultListModel mdlDemandados = new DefaultListModel();
    /** Creates new form Kardex */
    public EntregaRecibe(java.awt.Frame parent, boolean modal, Usuario u) {
        super(parent, modal);
        
        initComponents();

        setMaximumSize(new Dimension(800,600));
        setMinimumSize(new Dimension(800,600));
        setLocationRelativeTo(parent);
        user=u;
        //this.txtJudicatura.setText(user.jud_id);
        this.btnRegistrar.setVisible(false);
        this.btnCancelar.setVisible(false);
        //this.btnAgregar.setVisible(false);
        //this.btnActualizar.setVisible(false);
        DefaultComboBoxModel mdlJudicaturas = new DefaultComboBoxModel(CargarJudicaturas());
        Judicatura j = new Judicatura();
        mdlJudicaturas.setSelectedItem(j);
        this.cmbJudicaturas.setModel(mdlJudicaturas);
        this.txtAno.requestFocusInWindow();
        this.btnBuscar.setEnabled(false);
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        txtJudicatura = new javax.swing.JTextField();
        txtAno = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtCuerpos = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lblDemandado3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblLogJuez = new javax.swing.JLabel();
        lblDemandado4 = new javax.swing.JLabel();
        txtFojas = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtObservaciones = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtJuez = new javax.swing.JTextField();
        txtSecretario = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtSector = new javax.swing.JTextField();
        txtStanteria = new javax.swing.JTextField();
        txtBandeja = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtCaja = new javax.swing.JTextField();
        cmbMaterias = new javax.swing.JComboBox();
        cmbTipoJuicio = new javax.swing.JComboBox();
        cmbDelitos = new javax.swing.JComboBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        lstActor = new javax.swing.JList();
        jScrollPane6 = new javax.swing.JScrollPane();
        lstDemandado = new javax.swing.JList();
        btnLimpiar = new javax.swing.JButton();
        txtNumero = new javax.swing.JTextField();
        btnAmarillo = new javax.swing.JButton();
        btnBlanco = new javax.swing.JButton();
        btnRojo = new javax.swing.JButton();
        btnVerde = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        lblEstado = new javax.swing.JLabel();
        cmbJudicaturas = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tkardex = new javax.swing.JTable();
        btnRegistrar = new javax.swing.JButton();
        btnBusqueda = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(kardexarchivo.KardexArchivoApp.class).getContext().getResourceMap(EntregaRecibe.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setModal(true);
        setName("Form"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel6.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        txtJudicatura.setEditable(false);
        txtJudicatura.setName("txtJudicatura"); // NOI18N
        txtJudicatura.setNextFocusableComponent(txtAno);
        txtJudicatura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtJudicaturaFocusLost(evt);
            }
        });
        txtJudicatura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtJudicaturaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtJudicaturaKeyTyped(evt);
            }
        });

        txtAno.setName("txtAno"); // NOI18N
        txtAno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAnoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAnoKeyTyped(evt);
            }
        });

        jLabel7.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel8.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        btnBuscar.setText(resourceMap.getString("btnBuscar.text")); // NOI18N
        btnBuscar.setEnabled(false);
        btnBuscar.setName("btnBuscar"); // NOI18N
        btnBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBuscarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBuscarMouseEntered(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setMaximumSize(new java.awt.Dimension(1024, 600));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(940, 285));

        jLabel11.setFont(resourceMap.getFont("jLabel12.font")); // NOI18N
        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N

        jLabel12.setFont(resourceMap.getFont("jLabel12.font")); // NOI18N
        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N

        txtCuerpos.setEditable(false);
        txtCuerpos.setText(resourceMap.getString("txtCuerpos.text")); // NOI18N
        txtCuerpos.setName("txtCuerpos"); // NOI18N
        txtCuerpos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCuerposMouseClicked(evt);
            }
        });
        txtCuerpos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCuerposKeyTyped(evt);
            }
        });

        jLabel15.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N

        jLabel16.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N

        lblDemandado3.setFont(resourceMap.getFont("lblDemandado3.font")); // NOI18N
        lblDemandado3.setText(resourceMap.getString("lblDemandado3.text")); // NOI18N
        lblDemandado3.setName("lblDemandado3"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        lblLogJuez.setFont(resourceMap.getFont("lblLogJuez.font")); // NOI18N
        lblLogJuez.setText(resourceMap.getString("lblLogJuez.text")); // NOI18N
        lblLogJuez.setName("lblLogJuez"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblLogJuez)
                .addContainerGap(117, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblLogJuez)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        lblDemandado4.setFont(resourceMap.getFont("lblDemandado4.font")); // NOI18N
        lblDemandado4.setText(resourceMap.getString("lblDemandado4.text")); // NOI18N
        lblDemandado4.setName("lblDemandado4"); // NOI18N

        txtFojas.setEditable(false);
        txtFojas.setText(resourceMap.getString("txtFojas.text")); // NOI18N
        txtFojas.setMaximumSize(new java.awt.Dimension(6, 20));
        txtFojas.setName("txtFojas"); // NOI18N
        txtFojas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFojasMouseClicked(evt);
            }
        });
        txtFojas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFojasKeyTyped(evt);
            }
        });

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        txtObservaciones.setColumns(20);
        txtObservaciones.setFont(resourceMap.getFont("txtObservaciones.font")); // NOI18N
        txtObservaciones.setLineWrap(true);
        txtObservaciones.setRows(5);
        txtObservaciones.setEnabled(false);
        txtObservaciones.setMaximumSize(new java.awt.Dimension(4, 19));
        txtObservaciones.setName("txtObservaciones"); // NOI18N
        jScrollPane2.setViewportView(txtObservaciones);

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        txtJuez.setEditable(false);
        txtJuez.setText(resourceMap.getString("txtJuez.text")); // NOI18N
        txtJuez.setName("txtJuez"); // NOI18N
        txtJuez.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtJuezKeyTyped(evt);
            }
        });

        txtSecretario.setEditable(false);
        txtSecretario.setText(resourceMap.getString("txtSecretario.text")); // NOI18N
        txtSecretario.setName("txtSecretario"); // NOI18N

        jLabel13.setFont(resourceMap.getFont("jLabel13.font")); // NOI18N
        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N

        txtSector.setEditable(false);
        txtSector.setName("txtSector"); // NOI18N

        txtStanteria.setEditable(false);
        txtStanteria.setName("txtStanteria"); // NOI18N

        txtBandeja.setEditable(false);
        txtBandeja.setName("txtBandeja"); // NOI18N

        jLabel17.setFont(resourceMap.getFont("jLabel12.font")); // NOI18N
        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N

        jLabel18.setFont(resourceMap.getFont("jLabel12.font")); // NOI18N
        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N

        jLabel19.setFont(resourceMap.getFont("jLabel12.font")); // NOI18N
        jLabel19.setText(resourceMap.getString("jLabel19.text")); // NOI18N
        jLabel19.setName("jLabel19"); // NOI18N

        jLabel20.setFont(resourceMap.getFont("jLabel12.font")); // NOI18N
        jLabel20.setText(resourceMap.getString("jLabel20.text")); // NOI18N
        jLabel20.setName("jLabel20"); // NOI18N

        txtCaja.setEditable(false);
        txtCaja.setName("txtCaja"); // NOI18N

        cmbMaterias.setEnabled(false);
        cmbMaterias.setName("cmbMaterias"); // NOI18N
        cmbMaterias.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMateriasItemStateChanged(evt);
            }
        });

        cmbTipoJuicio.setEnabled(false);
        cmbTipoJuicio.setName("cmbTipoJuicio"); // NOI18N
        cmbTipoJuicio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoJuicioItemStateChanged(evt);
            }
        });

        cmbDelitos.setEnabled(false);
        cmbDelitos.setName("cmbDelitos"); // NOI18N

        jScrollPane5.setName("jScrollPane5"); // NOI18N

        lstActor.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstActor.setName("lstActor"); // NOI18N
        jScrollPane5.setViewportView(lstActor);

        jScrollPane6.setName("jScrollPane6"); // NOI18N

        lstDemandado.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstDemandado.setName("lstDemandado"); // NOI18N
        jScrollPane6.setViewportView(lstDemandado);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtJuez, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel16)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                    .addComponent(txtSecretario, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cmbDelitos, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(cmbMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(14, 14, 14)
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(cmbTipoJuicio, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCuerpos)
                                    .addComponent(lblDemandado4))
                                .addComponent(txtFojas, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDemandado3))
                            .addGap(288, 288, 288))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)
                        .addGap(2, 2, 2)
                        .addComponent(txtSector, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtStanteria, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBandeja, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCaja, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(cmbMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addComponent(cmbTipoJuicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cmbDelitos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txtJuez, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(txtSecretario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblDemandado4)
                        .addGap(1, 1, 1)
                        .addComponent(txtCuerpos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDemandado3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFojas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, 0, 0, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel17)
                            .addComponent(txtSector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(txtStanteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(txtBandeja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(txtCaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        jLabel18.getAccessibleContext().setAccessibleName(resourceMap.getString("jLabel18.AccessibleContext.accessibleName")); // NOI18N

        btnLimpiar.setText(resourceMap.getString("btnLimpiar.text")); // NOI18N
        btnLimpiar.setName("btnLimpiar"); // NOI18N
        btnLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLimpiarMouseClicked(evt);
            }
        });
        btnLimpiar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnLimpiarKeyPressed(evt);
            }
        });

        txtNumero.setText(resourceMap.getString("txtNumero.text")); // NOI18N
        txtNumero.setName("txtNumero"); // NOI18N
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroKeyPressed(evt);
            }
        });

        btnAmarillo.setBackground(resourceMap.getColor("btnAmarillo.background")); // NOI18N
        btnAmarillo.setIcon(resourceMap.getIcon("btnAmarillo.icon")); // NOI18N
        btnAmarillo.setEnabled(false);
        btnAmarillo.setLabel(resourceMap.getString("btnAmarillo.label")); // NOI18N
        btnAmarillo.setName("btnAmarillo"); // NOI18N
        btnAmarillo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAmarilloMouseClicked(evt);
            }
        });

        btnBlanco.setBackground(resourceMap.getColor("btnBlanco.background")); // NOI18N
        btnBlanco.setIcon(resourceMap.getIcon("btnBlanco.icon")); // NOI18N
        btnBlanco.setEnabled(false);
        btnBlanco.setName("btnBlanco"); // NOI18N
        btnBlanco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBlancoMouseClicked(evt);
            }
        });

        btnRojo.setBackground(resourceMap.getColor("btnRojo.background")); // NOI18N
        btnRojo.setIcon(resourceMap.getIcon("btnRojo.icon")); // NOI18N
        btnRojo.setEnabled(false);
        btnRojo.setName("btnRojo"); // NOI18N
        btnRojo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRojoMouseClicked(evt);
            }
        });

        btnVerde.setBackground(resourceMap.getColor("btnVerde.background")); // NOI18N
        btnVerde.setIcon(resourceMap.getIcon("btnVerde.icon")); // NOI18N
        btnVerde.setToolTipText(resourceMap.getString("btnVerde.toolTipText")); // NOI18N
        btnVerde.setEnabled(false);
        btnVerde.setName("btnVerde"); // NOI18N
        btnVerde.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVerdeMouseClicked(evt);
            }
        });

        btnCancelar.setText(resourceMap.getString("btnCancelar.text")); // NOI18N
        btnCancelar.setName("btnCancelar"); // NOI18N
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
        });
        btnCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCancelarKeyPressed(evt);
            }
        });

        btnSalir.setText(resourceMap.getString("btnSalir.text")); // NOI18N
        btnSalir.setName("btnSalir"); // NOI18N
        btnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalirMouseClicked(evt);
            }
        });
        btnSalir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalirKeyPressed(evt);
            }
        });

        lblEstado.setFont(resourceMap.getFont("lblEstado.font")); // NOI18N
        lblEstado.setText(resourceMap.getString("lblEstado.text")); // NOI18N
        lblEstado.setName("lblEstado"); // NOI18N

        cmbJudicaturas.setName("cmbJudicaturas"); // NOI18N
        cmbJudicaturas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbJudicaturasItemStateChanged(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tkardex.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tkardex.setName("tkardex"); // NOI18N
        jScrollPane1.setViewportView(tkardex);

        btnRegistrar.setText(resourceMap.getString("btnRegistrar.text")); // NOI18N
        btnRegistrar.setName("btnRegistrar"); // NOI18N
        btnRegistrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistrarMouseClicked(evt);
            }
        });

        btnBusqueda.setText(resourceMap.getString("btnBusqueda.text")); // NOI18N
        btnBusqueda.setName("btnBusqueda"); // NOI18N
        btnBusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBusquedaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbJudicaturas, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(txtJudicatura, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(32, 32, 32))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtAno, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLimpiar)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(484, 484, 484)
                                        .addComponent(lblEstado))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(btnBusqueda)
                                        .addGap(154, 154, 154)
                                        .addComponent(btnAmarillo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnBlanco, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnRojo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRegistrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 461, Short.MAX_VALUE)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 797, Short.MAX_VALUE)
                        .addContainerGap(19, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbJudicaturas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtJudicatura, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAno, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnBuscar)
                                .addComponent(btnLimpiar)
                                .addComponent(btnBusqueda))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnRojo, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                        .addComponent(btnBlanco, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                        .addComponent(btnAmarillo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, Short.MAX_VALUE)
                        .addComponent(lblEstado, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnVerde, 0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegistrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-842)/2, (screenSize.height-622)/2, 842, 622);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseClicked
        // TODO add your handling code here:
    if(this.btnBuscar.isEnabled()){
        String idjuicio;
        idjuicio=this.txtJudicatura.getText()+this.txtAno.getText()+this.txtNumero.getText();
        Juicio j = new Juicio();
         j.jui_id=idjuicio;
         j.jud_id=this.txtJudicatura.getText();
        if(j.ExisteJuicio()){
            this.CargarJuicio(idjuicio,j.jud_id);
            this.CargarKardexJuicio(idjuicio);
            existejuicio=true;
            this.btnBuscar.setEnabled(false);
            bloquear(false);
            //this.CargarKardexJuicio();
         }else{
            int reply = JOptionPane.showConfirmDialog(null, "ESTE PROCESO AUN NO ESTA EN EL INVENTARIO DE ESTE ARCHIVO...!", "Proceso no existe en Inventario", JOptionPane.PLAIN_MESSAGE);
            /*if (reply==JOptionPane.YES_OPTION){
                 //if(this.CargarJuicio(idjuicio,this.user.jud_id)){
                    bloquear(true);
                    this.btnBuscar.setVisible(false);
                    this.btnLimpiar.setVisible(false);
                    this.btnRegistrar.setVisible(false);
                    this.btnCancelar.setVisible(true);
                    DefaultComboBoxModel mdlMaterias = new DefaultComboBoxModel(CargarMaterias());
                    Materias m = new Materias();
                    mdlMaterias.setSelectedItem(m);
                    this.cmbMaterias.setModel(mdlMaterias);
                //}
            }*/
            
           // JOptionPane.showMessageDialog(null,"INVENTARIAR");
         }
        }
    }//GEN-LAST:event_btnBuscarMouseClicked

    private void txtJudicaturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJudicaturaKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            this.txtAno.requestFocus();
        }
    }//GEN-LAST:event_txtJudicaturaKeyPressed

    private void txtJudicaturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJudicaturaKeyTyped
        // TODO add your handling code here:
        if (txtJudicatura.getText().length()== 5 || !Character.isDigit(evt.getKeyChar()))
              evt.consume();
    }//GEN-LAST:event_txtJudicaturaKeyTyped

    private void txtAnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnoKeyTyped
        // TODO add your handling code here:
         if (txtAno.getText().length()== 4 || !Character.isDigit(evt.getKeyChar()))
              evt.consume();
    }//GEN-LAST:event_txtAnoKeyTyped

    private void btnLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimpiarMouseClicked
        // TODO add your handling code here:
        if(this.btnLimpiar.isEnabled())
            this.Limpiar();
    }//GEN-LAST:event_btnLimpiarMouseClicked

    private void btnLimpiarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnLimpiarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLimpiarKeyPressed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        this.Limpiar();
        
    }//GEN-LAST:event_formWindowClosed

    private void btnSalirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalirKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnSalirKeyPressed

    private void btnSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnSalirMouseClicked

    private void txtJudicaturaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtJudicaturaFocusLost
        // TODO add your handling code here:
        if (!this.txtJudicatura.getText().isEmpty()){
        Judicatura jud = new Judicatura();
        jud.jud_id=this.txtJudicatura.getText();
            if(!jud.BuscarJudicatura()){

                this.txtJudicatura.requestFocus();
                this.txtJudicatura.selectAll();
                 String st="La judicatura ingresada no existe...";
                       JOptionPane.showMessageDialog(null,st);
            }
        }
    }//GEN-LAST:event_txtJudicaturaFocusLost

    private void txtAnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnoKeyPressed
         if(evt.getKeyCode()==KeyEvent.VK_ENTER){
                   txtNumero.requestFocus();
                }        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnoKeyPressed

    private void btnCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCancelarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarKeyPressed

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        btnBuscar.setVisible(true);
        btnLimpiar.setVisible(true);
        //btnGuardar.setVisible(false);
        btnCancelar.setVisible(false);
        DefaultComboBoxModel mdlJudicaturas = new DefaultComboBoxModel(CargarJudicaturas());
        Judicatura j = new Judicatura();
        mdlJudicaturas.setSelectedItem(j);
        this.cmbJudicaturas.setModel(mdlJudicaturas);
        
        this.Limpiar();
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void txtNumeroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyTyped
        // TODO add your handling code here:
         if (txtNumero.getText().length()== 5 && Character.isDigit(evt.getKeyChar()))
              evt.consume();
         
         if(txtJudicatura.getText().length()!=0 && txtAno.getText().length()==4 && txtNumero.getText().length()>=3){
                btnBuscar.setEnabled(true);
              
         }else{
               btnBuscar.setEnabled(false);
         }
     
        
    }//GEN-LAST:event_txtNumeroKeyTyped

    private void txtCuerposKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCuerposKeyTyped
        // TODO add your handling code here:
       if(!Character.isDigit(evt.getKeyChar()))
              evt.consume();
    }//GEN-LAST:event_txtCuerposKeyTyped

    private void txtFojasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFojasKeyTyped
        // TODO add your handling code here:
        if(!Character.isDigit(evt.getKeyChar()))
              evt.consume();
    }//GEN-LAST:event_txtFojasKeyTyped
private void cargaretiquetas(String jui_id){
     try{
         this.btnAmarillo.setEnabled(false);
         this.btnBlanco.setEnabled(false);
         this.btnRojo.setEnabled(false);
         this.btnVerde.setEnabled(false);
    ResultSet rs = null;
        BaseDatos conn = new BaseDatos("INVENTARIO");
        conn.Conectar();
        conn.CrearStoreProcedure("exec proc_select_etiquetas  ?");
        conn.AgregarParametroString("jui_id", jui_id);
        rs=conn.EjecutarComando();
         while(rs.next()){
               int opcion=rs.getInt("et_id");
               //System.out.println(opcion);
                switch (opcion){
                    case 1:
                        this.btnAmarillo.setEnabled(true);
                        break;
                    case 2:
                        this.btnBlanco.setEnabled(true);
                        break;
                    case 3:
                        this.btnRojo.setEnabled(true);
                        break;
                    case 4:
                        this.btnVerde.setEnabled(true);
                        break;

                }
        }
         conn.Desconectar();
       }catch(Exception ex){
                System.out.println(ex);
             }
}
    private void btnAmarilloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAmarilloMouseClicked
       if(evt.getClickCount()==2 && existejuicio){
           String idjuicio;
           idjuicio=this.txtJudicatura.getText()+this.txtAno.getText()+this.txtNumero.getText();
           Etiqueta etiqueta = new Etiqueta(1,idjuicio);
             evt.consume();
        if (this.btnAmarillo.isEnabled()){
               etiqueta.quitaretiqueta();
                this.btnAmarillo.setEnabled(false);
            } else{

                  etiqueta.poneretiqueta();
                   this.btnAmarillo.setEnabled(true);
            }
        }
    }//GEN-LAST:event_btnAmarilloMouseClicked

    private void btnBlancoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBlancoMouseClicked
        // TODO add your handling code here:
       if(evt.getClickCount()==2 && existejuicio){
           String idjuicio;
           idjuicio=this.txtJudicatura.getText()+this.txtAno.getText()+this.txtNumero.getText();
           Etiqueta etiqueta = new Etiqueta(2,idjuicio);
             evt.consume();
        if (this.btnBlanco.isEnabled()){
                  etiqueta.quitaretiqueta();
                this.btnBlanco.setEnabled(false);
            } else{

                 etiqueta.poneretiqueta();
                   this.btnBlanco.setEnabled(true);
            }
        }
    }//GEN-LAST:event_btnBlancoMouseClicked

    private void btnRojoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRojoMouseClicked
        // TODO add your handling code here:
       if(evt.getClickCount()==2 && existejuicio){
           String idjuicio;
           idjuicio=this.txtJudicatura.getText()+this.txtAno.getText()+this.txtNumero.getText();
           Etiqueta etiqueta = new Etiqueta(3,idjuicio);
             evt.consume();
        if (this.btnRojo.isEnabled()){
                etiqueta.quitaretiqueta();
                this.btnRojo.setEnabled(false);
            } else{

                  etiqueta.poneretiqueta();
                   this.btnRojo.setEnabled(true);
            }
        }
    }//GEN-LAST:event_btnRojoMouseClicked

    private void btnVerdeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerdeMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2 && existejuicio){
           String idjuicio;
           idjuicio=this.txtJudicatura.getText()+this.txtAno.getText()+this.txtNumero.getText();
           Etiqueta etiqueta = new Etiqueta(4,idjuicio);
             evt.consume();
        if (this.btnVerde.isEnabled()){
            etiqueta.quitaretiqueta();
                this.btnVerde.setEnabled(false);
            } else{
                  etiqueta.poneretiqueta();
                   this.btnVerde.setEnabled(true);
            }
        }
    }//GEN-LAST:event_btnVerdeMouseClicked

    private void btnBuscarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBuscarMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBuscarMouseEntered

    private void txtNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            
                  this.btnBuscarMouseClicked(null);
                          }
    }//GEN-LAST:event_txtNumeroKeyPressed

private void cmbMateriasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMateriasItemStateChanged
         if (evt.getStateChange() == evt.SELECTED) {
            Materias mat= new Materias();
            mat=(Materias)this.cmbMaterias.getSelectedItem();
            DefaultComboBoxModel mdlTipoJuicios = new DefaultComboBoxModel(CargarTiposJuicio(mat.getMat_id()));
            TipoJuicio tj= new TipoJuicio();
            mdlTipoJuicios.setSelectedItem(tj);
            this.cmbTipoJuicio.setModel(mdlTipoJuicios);
            //DefaultComboBoxModel cmbDelitoTemp = new DefaultComboBoxModel();
            //this.cmbDelitos.setModel(cmbDelitoTemp);
        }
}//GEN-LAST:event_cmbMateriasItemStateChanged

private void cmbTipoJuicioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoJuicioItemStateChanged
        // TODO add your handling code here:
       if (evt.getStateChange() == evt.SELECTED) {
                TipoJuicio tipjuicio= new TipoJuicio();
                tipjuicio=(TipoJuicio)this.cmbTipoJuicio.getSelectedItem();
                Materias mat= new Materias();
                mat=(Materias)this.cmbMaterias.getSelectedItem();
                DefaultComboBoxModel mdlDelito = new DefaultComboBoxModel(CargarDelitos(mat.getMat_id(),tipjuicio.getTip_id()));
                Delitos d = new Delitos();
                mdlDelito.setSelectedItem(d);
                this.cmbDelitos.setModel(mdlDelito);

          }
}//GEN-LAST:event_cmbTipoJuicioItemStateChanged

private void cmbJudicaturasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbJudicaturasItemStateChanged
// TODO add your handling code here:
      if (evt.getStateChange() == evt.SELECTED) {
                Judicatura judi= new Judicatura();
                judi=(Judicatura)this.cmbJudicaturas.getSelectedItem();
               this.txtJudicatura.setText(judi.jud_id); 
                       

          }
}//GEN-LAST:event_cmbJudicaturasItemStateChanged

private void txtJuezKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJuezKeyTyped
// TODO add your handling code here:
         evt.setKeyChar(Character.toUpperCase(evt.getKeyChar()));
}//GEN-LAST:event_txtJuezKeyTyped

private void btnRegistrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarMouseClicked
// TODO add your handling code here:
    if (existejuicio){
            String idjuicio;
            idjuicio=this.txtJudicatura.getText()+this.txtAno.getText()+this.txtNumero.getText();
            new GuardarKardex(new javax.swing.JFrame(),true, idjuicio,user).setVisible(true);
            this.CargarKardexJuicio(idjuicio);
            this.cargaretiquetas(idjuicio);
        }else
        {
         String st="Debe ingresar un juicio para poder agregar...";
                   JOptionPane.showMessageDialog(null,st);
        }
}//GEN-LAST:event_btnRegistrarMouseClicked

private void btnBusquedaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBusquedaMouseClicked
// TODO add your handling code here:
      btnLimpiarMouseClicked(evt);  
      DialogoBusquedaJuicios n= new DialogoBusquedaJuicios(new javax.swing.JFrame(),true);
      n.setVisible(true);
      //this.CargarJuicio(n.getIdjuicio(), null);
      this.txtJudicatura.setText(n.getIdjuicio().substring(0,5));
      this.txtAno.setText(n.getIdjuicio().substring(5,9));
      this.txtNumero.setText(n.getIdjuicio().substring(9,n.getIdjuicio().length()));
      if(n.getIdjuicio()!=null){
          this.btnBuscar.setEnabled(true);
          btnBuscarMouseClicked(evt);
      }
      //System.out.println(n.getIdjuicio());
       
            
}//GEN-LAST:event_btnBusquedaMouseClicked

private void txtCuerposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCuerposMouseClicked
// TODO add your handling code here:
    if (evt.getClickCount()==2){
     String nombre=JOptionPane.showInputDialog(null,"ACTUALIZAR CUERPOS  ",this.txtCuerpos.getText()); 
  
    }
}//GEN-LAST:event_txtCuerposMouseClicked

private void txtFojasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFojasMouseClicked
// TODO add your handling code here:
    if (evt.getClickCount()==2){
     String nombre=JOptionPane.showInputDialog(null,"ACTUALIZAR FOJAS  ",this.txtCuerpos.getText()); 
  
    }
}//GEN-LAST:event_txtFojasMouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EntregaRecibe dialog = new EntregaRecibe(new javax.swing.JFrame(), true, new Usuario());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

public void bloquear(boolean estado){

      //txtJudicatura.setEditable(!estado);
      //txtJudicatura.setEnabled(!estado);
      txtAno.setEditable(estado);
      txtAno.setEnabled(estado);
      txtNumero.setEditable(estado);
      txtNumero.setEnabled(estado);
      cmbMaterias.setEnabled(estado);
      cmbDelitos.setEnabled(estado);
      this.cmbTipoJuicio.setEnabled(estado);
      txtCuerpos.setEditable(estado);
      txtFojas.setEditable(estado);
      txtJuez.setEditable(estado);
      txtJuez.setEnabled(estado);
      txtSecretario.setEditable(estado);
      txtSecretario.setEnabled(estado);
      txtSector.setEditable(estado);
      txtSector.setEnabled(estado);
      txtStanteria.setEditable(estado);
      txtStanteria.setEnabled(estado);
      txtBandeja.setEditable(estado);
      txtBandeja.setEnabled(estado);
      txtCaja.setEditable(estado);
      txtCaja.setEnabled(estado);
      lstActor.setEnabled(estado);
     // btnAgregarActor.setVisible(estado);
     // btnAgregarDemandado.setVisible(estado);
      lstDemandado.setEnabled(estado);
      cmbJudicaturas.setEnabled(estado);
      txtObservaciones.setEnabled(estado);
      txtObservaciones.setEditable(estado);
      this.btnRegistrar.setVisible(!estado);
}

public void Limpiar() {
        txtJuez.setText(null);
        txtSecretario.setText(null);
        txtJudicatura.setText("");
        txtAno.setText("");
        txtNumero.setText("");
        txtSector.setText(null);
        txtStanteria.setText(null);
        txtBandeja.setText(null);
        txtCaja.setText(null);
        txtFojas.setText("");
        txtCuerpos.setText("");
        lblLogJuez.setText("");
        cmbMaterias.removeAllItems();
        cmbTipoJuicio.removeAllItems();
        cmbDelitos.removeAll();
        mdlActores.clear();
        mdlDemandados.clear();
        DefaultTableModel modelo1 = new DefaultTableModel();
      this.tkardex.setModel(modelo1);
        DefaultComboBoxModel mdlJudicaturas = new DefaultComboBoxModel(CargarJudicaturas());
        Judicatura j = new Judicatura();
        mdlJudicaturas.setSelectedItem(j);
        this.cmbJudicaturas.setModel(mdlJudicaturas);
        btnRegistrar.setVisible(false);
        existejuicio=false;          
        txtObservaciones.setText(null);
        txtObservaciones.setEnabled(true);
        btnAmarillo.setEnabled(false);
        btnBlanco.setEnabled(false);
        btnRojo.setEnabled(false);
        btnVerde.setEnabled(false);
          //btnAgregar.setVisible(false);
            bloquear(true);
      }
public boolean CargarJuicio(String idjuicio, String judicatura) {
try{
            ResultSet rs = null;
            BaseDatos conn = new BaseDatos("INVENTARIO");
            conn.Conectar();
            conn.CrearStoreProcedure("exec proc_select_juicio ?");
            conn.AgregarParametroString("jui_id", idjuicio);
            rs=conn.EjecutarComando();

           
            if(rs.next()){
                this.txtJuez.setText(rs.getString("juez"));
                 this.txtSecretario.setText(rs.getString("secretario"));
                  this.txtObservaciones.setText(rs.getString("observaciones"));
                 this.txtSector.setText(rs.getString("sector"));
                 this.txtStanteria.setText(rs.getString("estanteria"));
                 this.txtBandeja.setText(rs.getString("bandeja"));
                 this.txtCaja.setText(rs.getString("caja"));
                 this.txtCuerpos.setText(rs.getString("cuerpos") );
                this.txtFojas.setText(rs.getString("fojas") );
                
                Materias m = new Materias();
                m.mat_id=rs.getInt("mat_id");
                m.cargarNombre();
                //m.mat_nombre="FAMILIA, NIÑEZ Y ADOLESCENCIA";
                DefaultComboBoxModel mdlMaterias = new DefaultComboBoxModel(CargarMaterias());
                mdlMaterias.setSelectedItem(m);
                this.cmbMaterias.setModel(mdlMaterias);
                TipoJuicio tj = new TipoJuicio();
                tj.tip_id=rs.getInt("tip_id");
                tj.cargarNombre();
               DefaultComboBoxModel mdlTipoJuicios = new DefaultComboBoxModel(CargarTiposJuicio(rs.getInt("mat_id")));
               mdlTipoJuicios.setSelectedItem(tj);
               this.cmbTipoJuicio.setModel(mdlTipoJuicios);
               Delitos d = new Delitos();
               d.del_id=rs.getInt("del_id");
               d.cargarNombre();
               DefaultComboBoxModel mdlDelitoTemp = new DefaultComboBoxModel();
               mdlDelitoTemp.setSelectedItem(d);
               this.cmbDelitos.setModel(mdlDelitoTemp);
              
               Font f = new Font("TimesRoman", Font.PLAIN, 28);
               lblLogJuez.setFont(f);
               lblEstado.setFont(f);
               rs.close();
               

              //UBICACION DESDE BDD INVENTARIO
              /*Juicio ubijuicio=this.CargarUbicacion(idjuicio);
               
               this.txtObservaciones.setText(ubijuicio.getJui_observaciones());
               this.txtSector.setText(ubijuicio.getJui_sector());
               System.out.println(ubijuicio.getJui_sector());
               this.txtStanteria.setText(ubijuicio.getJui_estanteria());
               this.txtBandeja.setText(ubijuicio.getJui_bandeja());
               this.txtCaja.setText(ubijuicio.getJui_caja());
               */
               this.CargarLitigantes(idjuicio);
               this.cargaretiquetas(idjuicio);
               Juicio j = new Juicio();
               conn.Desconectar();
               return true;
              
            }else{
                   String st="El proceso aun no consta en el sistema SATJE...";
                   JOptionPane.showMessageDialog(null,st);
                   this.Limpiar();
                   rs.close();
                   return false;
           }
            
            }catch(SQLException ex) {
                    System.out.println("Hubo un problema al ejecutar comando...Error:"+ex);
           }
            return false;
}

public void CargarLitigantes(String idjuicio){
            ResultSet rs = null;
            BaseDatos conn = new BaseDatos("INVENTARIO");
            conn.Conectar();
            conn.CrearStoreProcedure("exec proc_select_litigantes ?");
            conn.AgregarParametroString("jui_id", idjuicio);
            rs=conn.EjecutarComando();
            try{

              //this.tkardex.setModel(modelo);
               while(rs.next()){
                if(rs.getString("lit_tipo").equals("A")){
                       Litigantes a= new Litigantes();
                       a.lit_id=rs.getInt("lit_id");
                       a.lit_nombre=rs.getString("lit_nombre");
                       a.lit_tipo=rs.getString("lit_tipo");
                   
                       this.mdlActores.addElement(a);
                       this.lstActor.setModel(mdlActores);
                   }
                   if(rs.getString("lit_tipo").equals("D")){
                        Litigantes d= new Litigantes();
                       d.lit_id=rs.getInt("lit_id");
                       d.lit_nombre=rs.getString("lit_nombre");
                       d.lit_tipo=rs.getString("lit_tipo");
                       this.mdlDemandados.addElement(d);
                       this.lstDemandado.setModel(mdlDemandados);
                   }
             
            }
               rs.close();
                    
            }catch(SQLException ex) {
                    System.out.println("Hubo un problema al ejecutar comando...Error:"+ex);
           }
    
}

public void CargarKardexJuicio(String idjuicio) {
        
            ResultSet rs = null;
            BaseDatos conn = new BaseDatos("INVENTARIO");
            conn.Conectar();
            conn.CrearStoreProcedure("exec proc_select_kardex_juicio ?");
            conn.AgregarParametroString("jui_id", idjuicio);
            rs=conn.EjecutarComando();

           try{

               ResultSetMetaData rsmd = rs.getMetaData();
               int numcol= rsmd.getColumnCount();
               DefaultTableModel modelo = new DefaultTableModel();
              this.tkardex.setModel(modelo);
               for(int x=1;x<=numcol;x++){
                    modelo.addColumn(rsmd.getColumnLabel(x));
            }

            while(rs.next()){
                Object [] fila= new Object[numcol];
                for(int y=0;y<numcol;y++){
                    fila[y]=rs.getObject(y+1);
               }
                modelo.addRow(fila);
             
            }
                tkardex.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tkardex.getColumnModel().getColumn(0).setMinWidth(-1);
              tkardex.getColumnModel().getColumn(0).setMinWidth(0);
              tkardex.getColumnModel().getColumn(1).setWidth(100);
                tkardex.getColumnModel().getColumn(0).setMaxWidth(50);
                tkardex.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(-1);
                tkardex.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
               rs.close();
            }catch(SQLException ex) {
                    System.out.println("Hubo un problema al ejecutar comando...Error:"+ex);
           }
}

 public static Juicio CargarUbicacion(String idjuicio){
        Juicio ubijuicio = new Juicio();
        ResultSet rs = null;
        BaseDatos bdd= new BaseDatos("INVENTARIO");
        bdd.Conectar();
        String SQL= "exec proc_select_juicio ?";
        bdd.CrearStoreProcedure(SQL);
        bdd.AgregarParametroString("jui_id", idjuicio);
     
        rs=bdd.EjecutarComando();
        try{
            while(rs.next()){
               ubijuicio.jui_observaciones=rs.getString("observaciones");
               ubijuicio.jui_sector=rs.getString("sector");
               
               ubijuicio.jui_estanteria=rs.getString("estanteria");
               ubijuicio.jui_bandeja=rs.getString("bandeja");
               ubijuicio.jui_caja=rs.getString("caja");
            }
            rs.close();
        }catch(SQLException ex){
          System.out.println(ex);
        }

        return ubijuicio;

    }



 public static String CargarJueces(String idjuicio,String idjudicatura){
        String juez="SIN AVOCAR CONOCIMIENTO";
        ResultSet rs = null;
        BaseDatos bdd= new BaseDatos("satje");
        bdd.Conectar();
        String SQL= "select NombreFirmante,LoginOriginal "+
        "from CLEX1.SorteoFirmantes SF "+
        "inner join UsuarioPuestoTrabajo upt "+
        "on upt.IdFirmante=sf.IdFirmante "+
        "inner join Firmantes f "+
        "on f.IdFirmante=sf.IdFirmante "+
        "where sf.IdJuicio='"+idjuicio+"' and Tipo='JUEZ' AND sf.Estado='A' AND Ponente='S' and upt.Estado='A'";
        bdd.CrearStoreProcedure(SQL);
       /* bdd.CrearStoreProcedure("Select LogJuez, Nombre  from CLEX1.juicios "+ 
        "inner join CLEX1.FirmasJudicatura "+
        "on 'JUEZ_'+CLEX1.FirmasJudicatura.sustanciacion=CLEX1.juicios.LogJuez "+
        "AND CLEX1.FirmasJudicatura.IdCargo=7 AND CLEX1.FirmasJudicatura.IdJudicatura='"+idjudicatura+
         "' where IdJuicio='"+idjuicio+"'");*/
        //bdd.AgregarParametroString("jud_id", jue_id);
        
        rs=bdd.EjecutarComando();
        try{
            while(rs.next()){
                juez=rs.getString("NombreFirmante");
            }
            rs.close();
        }catch(SQLException ex){
          System.out.println(ex);
        }

        return juez;

    }
 public static String CargarSecretarios(String idjuicio, String judicatura){
       String Secretario="NO ASIGANDO";
        ResultSet rs = null;
        BaseDatos bdd= new BaseDatos("satje");
        bdd.Conectar();
        String SQL= "select NombreFirmante,LoginOriginal "+
        "from CLEX1.SorteoFirmantes SF "+
        "inner join UsuarioPuestoTrabajo upt "+
        "on upt.IdFirmante=sf.IdFirmante "+
        "inner join Firmantes f "+
        "on f.IdFirmante=sf.IdFirmante "+
        "where sf.IdJuicio='"+idjuicio+"' and Tipo='SECRETARIO' AND sf.Estado='A' and upt.Estado='A'";
      bdd.CrearStoreProcedure(SQL);
        /*bdd.CrearStoreProcedure("Select LogJuez, Nombre  from CLEX1.juicios "+
        "inner join CLEX1.FirmasJudicatura "+
        "on 'JUEZ_'+CLEX1.FirmasJudicatura.sustanciacion=CLEX1.juicios.LogJuez "+
        "AND CLEX1.FirmasJudicatura.IdCargo=6 AND CLEX1.FirmasJudicatura.IdJudicatura='"+judicatura+
         "' where IdJuicio='"+jud_id+"'");*/
        //bdd.AgregarParametroString("jud_id", jud_id);
        rs=bdd.EjecutarComando();
        try{
            while(rs.next()){
                Secretario=rs.getString("NombreFirmante");
            }
            rs.close();
        }catch(SQLException ex){
          System.out.println(ex);
        }
        return Secretario;

    }

 
 public static String CargarActor(String idjuicio,String tipolitigante){
      String Actores="";
        ResultSet rs = null;
        BaseDatos bdd= new BaseDatos("satje");
        bdd.Conectar();
        bdd.CrearStoreProcedure("select rtrim(L.Nombre) as nombres from INCIDENTEJUDICATURA  mj "+
        "INNER JOIN BADALEX1.CLEX1.MovimientoJuicioIncidente MJI ON MJ.idmovimientojuicioincidente=MJI.idmovimientojuicioincidente "+
        "inner join CLEX1.MovimientoLitigante ML on ML.IdMovimientoJuicioIncidente = MJI.IdMovimientoJuicioIncidente "+
        "inner join CLEX1.Litigante L on L.Idlitigante = ML.Idlitigante "+
        "INNER JOIN CLEX1.TipoLitigante TL on tl.IdTipoLitigante=ML.IdTipoLitigante "+
        "where mj.IdJuicio='"+idjuicio+"' and  TIPO='"+ tipolitigante+"'");
        rs=bdd.EjecutarComando();
        
        try{
               
            while(rs.next()){
               
                Actores=Actores+rs.getString("nombres")+",\n ";

            }
            rs.close();
        }catch(SQLException ex){
          System.out.println(ex);
        }
        return Actores;

    }
 
 public static Vector<Materias> CargarMaterias(){
        Vector<Materias> materias = new Vector<Materias>();
        Materias mat= null;
        ResultSet rs = null;
        BaseDatos bdd= new BaseDatos("INVENTARIO");
        bdd.Conectar();
        bdd.CrearStoreProcedure("exec proc_select_materias");
        rs=bdd.EjecutarComando();
        try{
            while(rs.next()){
                mat= new Materias();
                mat.setMat_id(rs.getInt("mat_id"));
                mat.setMat_nombre(rs.getString("mat_nombre"));
                materias.add(mat);
            }
            rs.close();
        }catch(SQLException ex){
          System.out.println(ex);
        }
        return materias;

    }
 
 public static Vector<Judicatura> CargarJudicaturas(){
        Vector<Judicatura> judicaturas = new Vector<Judicatura>();
        Judicatura jud= null;
        ResultSet rs = null;
        BaseDatos bdd= new BaseDatos("INVENTARIO");
        bdd.Conectar();
        bdd.CrearStoreProcedure("exec proc_select_judicaturas");
        rs=bdd.EjecutarComando();
        try{
            while(rs.next()){
                jud= new Judicatura();
                jud.setJud_id(rs.getString("jud_id"));
                jud.setJud_nombre(rs.getString("jud_nombre"));
                judicaturas.add(jud);
            }
            rs.close();
        }catch(SQLException ex){
          System.out.println(ex);
        }
        return judicaturas;

    }
  public static Vector<TipoJuicio> CargarTiposJuicio(int mat){
        Vector<TipoJuicio> tipjui = new Vector<TipoJuicio>();
        TipoJuicio tj= null;
        ResultSet rs = null;
        BaseDatos bdd= new BaseDatos("INVENTARIO");
        bdd.Conectar();
        bdd.CrearStoreProcedure("exec proc_select_tipojuicio_x_materia ?");
        bdd.AgregarParametroEntero("mat_id", mat);
        rs=bdd.EjecutarComando();
        try{
               
            while(rs.next()){
                tj= new TipoJuicio();
                tj.setTip_id(rs.getInt("tip_id"));
                tj.setTip_nombre(rs.getString("tip_nombre"));
                tipjui.add(tj);
            }
            rs.close();
        }catch(SQLException ex){
          System.out.println(ex);
        }
        return tipjui;

    }
public static Vector<Delitos> CargarDelitos(int materia,int tipojuicio){
        Vector<Delitos> delitos = new Vector<Delitos>();
        Delitos del= null;
        ResultSet rs = null;
        BaseDatos bdd= new BaseDatos("INVENTARIO");
        bdd.Conectar();
        bdd.CrearStoreProcedure("exec proc_select_delitos_x_tipodejucio_materias ?,?");
        bdd.AgregarParametroEntero("mat_id", materia);
         bdd.AgregarParametroEntero("tip_id", tipojuicio);
        rs=bdd.EjecutarComando();
        try{
               
            while(rs.next()){
                del= new Delitos();
                del.setDel_id(rs.getInt("del_id"));
                del.setDel_nombre(rs.getString("del_nombre"));
                delitos.add(del);
            }
            rs.close();
        }catch(SQLException ex){
          System.out.println(ex);
        }
        return delitos;

    }
 /*
public static String CargarDemandado(String idjuicio){
      String Demandados="";
        ResultSet rs = null;
        BaseDatos bdd= new BaseDatos("satje");
        bdd.Conectar();
        bdd.CrearStoreProcedure("SELECT RTRIM(Nombres) AS Nombres" +
                                " FROM CLEX1.CPDefensor " +
                                "WHERE IdJuicio='"+idjuicio+"' ORDER BY Nombres");
        rs=bdd.EjecutarComando();
        try{

            while(rs.next()){
                Demandados=Demandados+rs.getString("nombres")+",\n" ;
            }
            rs.close();
        }catch(SQLException ex){
          System.out.println(ex);
        }
        return Demandados;

    }
 */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAmarillo;
    private javax.swing.JButton btnBlanco;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBusqueda;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnRojo;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnVerde;
    private javax.swing.JComboBox cmbDelitos;
    private javax.swing.JComboBox cmbJudicaturas;
    private javax.swing.JComboBox cmbMaterias;
    private javax.swing.JComboBox cmbTipoJuicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblDemandado3;
    private javax.swing.JLabel lblDemandado4;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblLogJuez;
    private javax.swing.JList lstActor;
    private javax.swing.JList lstDemandado;
    private javax.swing.JTable tkardex;
    private javax.swing.JTextField txtAno;
    private javax.swing.JTextField txtBandeja;
    private javax.swing.JTextField txtCaja;
    private javax.swing.JTextField txtCuerpos;
    private javax.swing.JTextField txtFojas;
    private javax.swing.JTextField txtJudicatura;
    private javax.swing.JTextField txtJuez;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextArea txtObservaciones;
    private javax.swing.JTextField txtSecretario;
    private javax.swing.JTextField txtSector;
    private javax.swing.JTextField txtStanteria;
    // End of variables declaration//GEN-END:variables
  

}
